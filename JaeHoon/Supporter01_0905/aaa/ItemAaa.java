package aaa;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * ITEM 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class ItemAaa implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** item_seq. */
	private Integer itemnum;

	/** 날짜(아이템아이디어날짜). */
	private Date ideadate;

	/** itemName. */
	private String itemname;

	/** price. */
	private Integer price;

	/** contract. */
	private String contract;

	/** itemContent. */
	private String itemcontent;

	/** 아이템타입. */
	private String itemoption;

	/** 아이템등록date. */
	private Date itemregdate;

	/** 이미지 파일네임. */
	private String itemimagename;

	/** 저장될파일네임. */
	private String saveitemimage;

	/** 가치(평균값). */
	private Integer avgvaluable;

	/** 상업성(평균값). */
	private Integer avgcommerciality;

	/** 제품성(평균값). */
	private Integer avgproductivity;

	/** 클라우드펀딩 목록. */
	private Set<CloudfundingAaa> cloudfundingSet;

	/** 아이템버전 목록. */
	private Set<HistoryAaa> historySet;

	/** 평가테이블 목록. */
	private Set<ItemSurveyAaa> itemSurveySet;

	/** 브릿지테이블(멤버,아이템) 목록. */
	private Set<MtiAaa> mtiSet;

	/** 브릿지테이블(아이템, 특허j) 목록. */
	private Set<PtiAaa> ptiSet;

	/**
	 * 생성자.
	 */
	public ItemAaa() {
		this.cloudfundingSet = new HashSet<CloudfundingAaa>();
		this.historySet = new HashSet<HistoryAaa>();
		this.itemSurveySet = new HashSet<ItemSurveyAaa>();
		this.mtiSet = new HashSet<MtiAaa>();
		this.ptiSet = new HashSet<PtiAaa>();
	}

	/**
	 * item_seq을 설정합니다..
	 * 
	 * @param itemnum
	 *            item_seq
	 */
	public void setItemnum(Integer itemnum) {
		this.itemnum = itemnum;
	}

	/**
	 * item_seq을 가져옵니다..
	 * 
	 * @return item_seq
	 */
	public Integer getItemnum() {
		return this.itemnum;
	}

	/**
	 * 날짜(아이템아이디어날짜)을 설정합니다..
	 * 
	 * @param ideadate
	 *            날짜(아이템아이디어날짜)
	 */
	public void setIdeadate(Date ideadate) {
		this.ideadate = ideadate;
	}

	/**
	 * 날짜(아이템아이디어날짜)을 가져옵니다..
	 * 
	 * @return 날짜(아이템아이디어날짜)
	 */
	public Date getIdeadate() {
		return this.ideadate;
	}

	/**
	 * itemName을 설정합니다..
	 * 
	 * @param itemname
	 *            itemName
	 */
	public void setItemname(String itemname) {
		this.itemname = itemname;
	}

	/**
	 * itemName을 가져옵니다..
	 * 
	 * @return itemName
	 */
	public String getItemname() {
		return this.itemname;
	}

	/**
	 * price을 설정합니다..
	 * 
	 * @param price
	 *            price
	 */
	public void setPrice(Integer price) {
		this.price = price;
	}

	/**
	 * price을 가져옵니다..
	 * 
	 * @return price
	 */
	public Integer getPrice() {
		return this.price;
	}

	/**
	 * contract을 설정합니다..
	 * 
	 * @param contract
	 *            contract
	 */
	public void setContract(String contract) {
		this.contract = contract;
	}

	/**
	 * contract을 가져옵니다..
	 * 
	 * @return contract
	 */
	public String getContract() {
		return this.contract;
	}

	/**
	 * itemContent을 설정합니다..
	 * 
	 * @param itemcontent
	 *            itemContent
	 */
	public void setItemcontent(String itemcontent) {
		this.itemcontent = itemcontent;
	}

	/**
	 * itemContent을 가져옵니다..
	 * 
	 * @return itemContent
	 */
	public String getItemcontent() {
		return this.itemcontent;
	}

	/**
	 * 아이템타입을 설정합니다..
	 * 
	 * @param itemoption
	 *            아이템타입
	 */
	public void setItemoption(String itemoption) {
		this.itemoption = itemoption;
	}

	/**
	 * 아이템타입을 가져옵니다..
	 * 
	 * @return 아이템타입
	 */
	public String getItemoption() {
		return this.itemoption;
	}

	/**
	 * 아이템등록date을 설정합니다..
	 * 
	 * @param itemregdate
	 *            아이템등록date
	 */
	public void setItemregdate(Date itemregdate) {
		this.itemregdate = itemregdate;
	}

	/**
	 * 아이템등록date을 가져옵니다..
	 * 
	 * @return 아이템등록date
	 */
	public Date getItemregdate() {
		return this.itemregdate;
	}

	/**
	 * 이미지 파일네임을 설정합니다..
	 * 
	 * @param itemimagename
	 *            이미지 파일네임
	 */
	public void setItemimagename(String itemimagename) {
		this.itemimagename = itemimagename;
	}

	/**
	 * 이미지 파일네임을 가져옵니다..
	 * 
	 * @return 이미지 파일네임
	 */
	public String getItemimagename() {
		return this.itemimagename;
	}

	/**
	 * 저장될파일네임을 설정합니다..
	 * 
	 * @param saveitemimage
	 *            저장될파일네임
	 */
	public void setSaveitemimage(String saveitemimage) {
		this.saveitemimage = saveitemimage;
	}

	/**
	 * 저장될파일네임을 가져옵니다..
	 * 
	 * @return 저장될파일네임
	 */
	public String getSaveitemimage() {
		return this.saveitemimage;
	}

	/**
	 * 가치(평균값)을 설정합니다..
	 * 
	 * @param avgvaluable
	 *            가치(평균값)
	 */
	public void setAvgvaluable(Integer avgvaluable) {
		this.avgvaluable = avgvaluable;
	}

	/**
	 * 가치(평균값)을 가져옵니다..
	 * 
	 * @return 가치(평균값)
	 */
	public Integer getAvgvaluable() {
		return this.avgvaluable;
	}

	/**
	 * 상업성(평균값)을 설정합니다..
	 * 
	 * @param avgcommerciality
	 *            상업성(평균값)
	 */
	public void setAvgcommerciality(Integer avgcommerciality) {
		this.avgcommerciality = avgcommerciality;
	}

	/**
	 * 상업성(평균값)을 가져옵니다..
	 * 
	 * @return 상업성(평균값)
	 */
	public Integer getAvgcommerciality() {
		return this.avgcommerciality;
	}

	/**
	 * 제품성(평균값)을 설정합니다..
	 * 
	 * @param avgproductivity
	 *            제품성(평균값)
	 */
	public void setAvgproductivity(Integer avgproductivity) {
		this.avgproductivity = avgproductivity;
	}

	/**
	 * 제품성(평균값)을 가져옵니다..
	 * 
	 * @return 제품성(평균값)
	 */
	public Integer getAvgproductivity() {
		return this.avgproductivity;
	}

	/**
	 * 클라우드펀딩 목록을 설정합니다..
	 * 
	 * @param cloudfundingSet
	 *            클라우드펀딩 목록
	 */
	public void setCloudfundingSet(Set<CloudfundingAaa> cloudfundingSet) {
		this.cloudfundingSet = cloudfundingSet;
	}

	/**
	 * 클라우드펀딩를 추가합니다..
	 * 
	 * @param cloudfunding
	 *            클라우드펀딩
	 */
	public void addCloudfunding(CloudfundingAaa cloudfunding) {
		this.cloudfundingSet.add(cloudfunding);
	}

	/**
	 * 클라우드펀딩 목록을 가져옵니다..
	 * 
	 * @return 클라우드펀딩 목록
	 */
	public Set<CloudfundingAaa> getCloudfundingSet() {
		return this.cloudfundingSet;
	}

	/**
	 * 아이템버전 목록을 설정합니다..
	 * 
	 * @param historySet
	 *            아이템버전 목록
	 */
	public void setHistorySet(Set<HistoryAaa> historySet) {
		this.historySet = historySet;
	}

	/**
	 * 아이템버전를 추가합니다..
	 * 
	 * @param history
	 *            아이템버전
	 */
	public void addHistory(HistoryAaa history) {
		this.historySet.add(history);
	}

	/**
	 * 아이템버전 목록을 가져옵니다..
	 * 
	 * @return 아이템버전 목록
	 */
	public Set<HistoryAaa> getHistorySet() {
		return this.historySet;
	}

	/**
	 * 평가테이블 목록을 설정합니다..
	 * 
	 * @param itemSurveySet
	 *            평가테이블 목록
	 */
	public void setItemSurveySet(Set<ItemSurveyAaa> itemSurveySet) {
		this.itemSurveySet = itemSurveySet;
	}

	/**
	 * 평가테이블를 추가합니다..
	 * 
	 * @param itemSurvey
	 *            평가테이블
	 */
	public void addItemSurvey(ItemSurveyAaa itemSurvey) {
		this.itemSurveySet.add(itemSurvey);
	}

	/**
	 * 평가테이블 목록을 가져옵니다..
	 * 
	 * @return 평가테이블 목록
	 */
	public Set<ItemSurveyAaa> getItemSurveySet() {
		return this.itemSurveySet;
	}

	/**
	 * 브릿지테이블(멤버,아이템) 목록을 설정합니다..
	 * 
	 * @param mtiSet
	 *            브릿지테이블(멤버,아이템) 목록
	 */
	public void setMtiSet(Set<MtiAaa> mtiSet) {
		this.mtiSet = mtiSet;
	}

	/**
	 * 브릿지테이블(멤버,아이템)를 추가합니다..
	 * 
	 * @param mti
	 *            브릿지테이블(멤버,아이템)
	 */
	public void addMti(MtiAaa mti) {
		this.mtiSet.add(mti);
	}

	/**
	 * 브릿지테이블(멤버,아이템) 목록을 가져옵니다..
	 * 
	 * @return 브릿지테이블(멤버,아이템) 목록
	 */
	public Set<MtiAaa> getMtiSet() {
		return this.mtiSet;
	}

	/**
	 * 브릿지테이블(아이템, 특허j) 목록을 설정합니다..
	 * 
	 * @param ptiSet
	 *            브릿지테이블(아이템, 특허j) 목록
	 */
	public void setPtiSet(Set<PtiAaa> ptiSet) {
		this.ptiSet = ptiSet;
	}

	/**
	 * 브릿지테이블(아이템, 특허j)를 추가합니다..
	 * 
	 * @param pti
	 *            브릿지테이블(아이템, 특허j)
	 */
	public void addPti(PtiAaa pti) {
		this.ptiSet.add(pti);
	}

	/**
	 * 브릿지테이블(아이템, 특허j) 목록을 가져옵니다..
	 * 
	 * @return 브릿지테이블(아이템, 특허j) 목록
	 */
	public Set<PtiAaa> getPtiSet() {
		return this.ptiSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((itemnum == null) ? 0 : itemnum.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		ItemAaa other = (ItemAaa) obj;
		if (itemnum == null) {
			if (other.itemnum != null) {
				return false;
			}
		} else if (!itemnum.equals(other.itemnum)) {
			return false;
		}
		return true;
	}

}
