package com.dev.cloud.controller;


import java.io.FileInputStream;
import java.io.IOException;

import java.io.UnsupportedEncodingException;

import java.util.List;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.dev.cloud.dao.PatentRepository;
import com.dev.cloud.dao.PatentSubRepository;
import com.dev.cloud.dao.PtiRepository;
import com.dev.cloud.dao.documentRepository;
import com.dev.cloud.dao.itemRepository;
import com.dev.cloud.utill.FileService;
import com.dev.cloud.vo.Document;
import com.dev.cloud.vo.Item;
import com.dev.cloud.vo.PTI;
import com.dev.cloud.vo.Patent;
import com.dev.cloud.vo.Patentsub;
import com.dev.cloud.vo.PdpVo;



@Controller
@RequestMapping("/patent")
public class PatentController {
	
	final String uploadPath = "/PatentSub";
	
	@Autowired
	itemRepository itpo;
	@Autowired
	PatentRepository papo;
	@Autowired
	PatentSubRepository supo;
	@Autowired
	PatentSubRepository pspo;
	@Autowired
	PtiRepository ptpo;
	@Autowired
	documentRepository dopo;
	
	
	//Patent 분류, 특허명, 특허번호 / devMember patentHoldName, memberId,  / PTI 신청날짜
	@RequestMapping(value = "/patentUseList", method = RequestMethod.GET)
	public String patentUseList(HttpSession session, Model model) { //split을 사용해서 파일을 두가지로 나눈다 => downLoad => file upload(ajax 처리)
		String name = (String) session.getAttribute("loginName");
		List<PdpVo> pList =  papo.pdpIdGo(name); //Patent 나머지 와  devMember 신청자 이름, PTI의 신청날짜 합친 VO 필요 
		
		System.out.println("66번줄pList==>"+pList);
		
		System.out.println("68번줄==>"+pList.size());
		model.addAttribute("pList",pList);
		
		return "/patent/patent_use_list";
	}
	

	
	@ResponseBody
	@RequestMapping(value = "/permitionForm", method = RequestMethod.POST)
	public String permitionForm(MultipartFile upload, PdpVo pd) { 
		System.out.println("76번줄==>"+upload);	//2가지  (1) document테이블에 documentFilename,saveDocumentFilename update된다. (2) PTI의 contract Yes로 바뀜 
		System.out.println("77번줄--==>"+pd);
		int ptiResult = 0;
		int docuResult = 0;
		int itemResult = 0;
		
		
		System.out.println("107번==>"+pd);
		FileService.deleteFile(uploadPath+"/"+pd.getSaveDocumentFilename());
		String documentFilename = upload.getOriginalFilename();
		String saveDocumentFilename = FileService.saveFile(upload, uploadPath); 
		pd.setDocumentFilename(documentFilename);
		pd.setSaveDocumentFilename(saveDocumentFilename);
		docuResult = dopo.updateDocu(pd); // document테이블에 documentFilename < == 
		itemResult  = itpo.pdpUpdate(pd);
		

		if(docuResult==1&&itemResult==1){
				pd.setContract("Yes");	
				ptiResult = ptpo.updatePTI(pd); // PTI의 contract Yes로 바뀜     <== pti_seq의 변화
			}
		System.out.println("118번줄result==>"+ptiResult);
			 if(ptiResult==1){
			 	return "success";
			 }else{
			 	return "false";
			 }
	}
	
	@ResponseBody
	@RequestMapping(value = "/down", method = RequestMethod.GET, produces="application/text; charset=utf8")
	public String down(int itemNum) { 
		String result = "";
		Item item = itpo.selectItemNum(itemNum);
		
		String sb = item.getDocumentFilename();
		String [] array = sb.split("@");
		for(int i=0;i<array.length;i++){
			result = array[0];
		}
		
		
		return result;
	}
	
	@ResponseBody
	@RequestMapping(value = "/down1", method = RequestMethod.GET, produces="application/text; charset=utf8")
	public String down1(int itemNum) { 
		String result = "";
		Item item = itpo.selectItemNum(itemNum);
		
		String sb = item.getDocumentFilename();
		String [] array = sb.split("@");
		for(int i=0;i<array.length;i++){
			result = array[1];
		}
		
		
		return result;
	}
	
	@RequestMapping(value = "/download1")
	public  void download1(
			  @RequestParam("itemNum") int itemNum
			, HttpSession session
			, HttpServletRequest req
			, HttpServletResponse res
			, ModelAndView mav) throws Throwable 
	{
		System.out.println("154번줄patentNum==>"+itemNum);
		Item item = itpo.selectItemNum(itemNum);
		System.out.println("154번줄patent==>"+item);
		String documentFilename = "";
		String saveDocumentFilename  = "";
		String sp = item.getDocumentFilename();
		String sp1 = item.getSaveDocumentFilename();
		String [] ay = sp1.split("@");
		String [] array = sp.split("@");
		for(int i = 0;i<array.length;i++){
			documentFilename = array[1];
		}
		for(int i = 0;i<array.length;i++){
			saveDocumentFilename = ay[1];
		}
		System.out.println("savedDocumentFileName"+saveDocumentFilename);

		try {

			FileService.filDown(req, res, "/PatentSub" + "/" , saveDocumentFilename, documentFilename); //파일다운로드 
			//C:/PatentSub
			//FileService.filDown(req, res, "/PatentSub" + "/" , "파일이름이력", "다운받았을때출력되는파일이름입력"); //파일다운로드 

			
		} catch (Exception e) {
			e.printStackTrace();
			
		}
	}
	@RequestMapping(value = "/patentDetail", method = RequestMethod.GET)
	public String patentDetail(String patentNum, Model model) {
		
		Patent p = new Patent();
		p.setPatentNum(patentNum);
		Patent patent = papo.selectPatent(p);
		
		model.addAttribute("pat",p);
		return "search/patent_popup";
	}
	
	@RequestMapping(value = "/download")
	public  void download(
			  @RequestParam("itemNum") int itemNum
			, HttpSession session
			, HttpServletRequest req
			, HttpServletResponse res
			, ModelAndView mav) throws Throwable 
	{
		System.out.println("154번줄patentNum==>"+itemNum);
		Item item = itpo.selectItemNum(itemNum);
		System.out.println("154번줄patent==>"+item);
		String documentFilename = "";
		String saveDocumentFilename  = "";
		String sp = item.getDocumentFilename();
		String sp1 = item.getSaveDocumentFilename();
		String [] ay = sp1.split("@");
		String [] array = sp.split("@");
		for(int i = 0;i<array.length;i++){
			documentFilename = array[0];
		}
		for(int i = 0;i<array.length;i++){
			saveDocumentFilename = ay[0];
		}

		System.out.println("savedDocumentFileName"+saveDocumentFilename);

		try {

			FileService.filDown(req, res, "/PatentSub" + "/" , saveDocumentFilename, documentFilename); //파일다운로드 
			//C:/PatentSub
			//FileService.filDown(req, res, "/PatentSub" + "/" , "파일이름이력", "다운받았을때출력되는파일이름입력"); //파일다운로드 	
		} catch (Exception e) {
			e.printStackTrace();
			
		}
	}
	
}
